// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:root@localhost:3306/goticket_database"
}

// model Sample {
//   id        Int      @id @default(autoincrement())
//   name      String
//   code      String   @unique
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("samples") // if you want to use snake_case format
// }

model User {
  id             Int            @id @default(autoincrement())
  user_name      String         @unique
  // firstName      String
  // lastName       String
  email          String
  password       String
  referral_code  String?
  role           Role            @default(USER)
  created_at     DateTime        @default(now())
  updated_at     DateTime        @updatedAt
  events         Event[]
  referrerPoints ReferralPoint[] @relation("ReferrerToReferralPoint")
  referredPoints ReferralPoint[] @relation("ReferredToReferralPoint")
  couponsEvent   CouponsEvent[]
  transactions   Transaction[]
  reviews        Review[]
}

model Event {
  id           Int            @id @default(autoincrement())
  organizer_id Int
  title        String
  price        Decimal        @default(0)
  date_time    DateTime
  end_time     DateTime
  location     String
  description  String
  seats        Int
  is_free      Boolean?
  is_online    Boolean?
  category     Category
  created_at   DateTime       @default(now())
  updated_at   DateTime       @updatedAt
  organizer    User           @relation(fields: [organizer_id], references: [id])
  couponsEvent CouponsEvent[]
  transactions Transaction[]
  reviews      Review[]
}

model ReferralPoint {
  id              Int      @id @default(autoincrement())
  referrer_id     Int
  referred_id     Int
  points          Int      @default(10000)
  claim_points    Boolean
  created_at      DateTime @default(now())
  expiration_date DateTime @default(dbgenerated("CURRENT_TIMESTAMP + INTERVAL 3 MONTH"))
  referrer        User     @relation("ReferrerToReferralPoint", fields: [referrer_id], references: [id])
  referred        User     @relation("ReferredToReferralPoint", fields: [referred_id], references: [id])
}

model CouponsEvent {
  id              Int           @id @default(autoincrement())
  user_id         Int
  event_id        Int
  coupon_type     CouponType
  discount_amount Decimal
  is_used         Boolean
  created_at      DateTime      @default(now())
  expiration_date DateTime      @default(dbgenerated("CURRENT_TIMESTAMP + INTERVAL 3 MONTH"))
  user            User          @relation(fields: [user_id], references: [id])
  event           Event         @relation(fields: [event_id], references: [id])
  transaction     Transaction[]
}

model Transaction {
  id              Int           @id @default(autoincrement())
  user_id         Int
  event_id        Int
  coupon_event_id Int?
  points_used     Int           @default(0)
  created_at      DateTime      @default(now())
  user            User          @relation(fields: [user_id], references: [id])
  event           Event         @relation(fields: [event_id], references: [id])
  couponEvent     CouponsEvent? @relation(fields: [coupon_event_id], references: [id])
}

model Review {
  id         Int      @id @default(autoincrement())
  user_id    Int
  event_id   Int
  rating     Int
  feedback   String
  created_at DateTime @default(now())
  user       User     @relation(fields: [user_id], references: [id])
  event      Event    @relation(fields: [event_id], references: [id])
}

enum Role {
  USER
  ORGANIZER
}

enum Category {
  music
  seminar
  etc
}

enum CouponType {
  EVENT
  REFERRAL
}